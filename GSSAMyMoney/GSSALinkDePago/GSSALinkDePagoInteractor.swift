//
//  GSSALinkDePagoInteractor.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 12/07/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAServiceCoordinator
import GSSASecurityManager
import GSSAFunctionalUtilities
import baz_ios_sdk_link_pago
import GSSASessionInfo

class GSSALinkDePagoInteractor: GSSAURLSessionTaskCoordinatorBridge, GSSALinkDePagoInteractorProtocol {

    weak var presenter: GSSALinkDePagoPresenterProtocol?
    private var afiliationNumber: String? = GSSAFundSharedVariables.shared.numeroAfiliacion
    
    private let email = GSSISessionInfo.sharedInstance.gsUser.email?.lowercased()
    
    
    func getEccomerceInformation() {
        LNKPG_Facade.shared.Initialize(environment: .release)
        afiliationNumber = GSSAFundSharedVariables.shared.numeroAfiliacion
        guard let afiliationNumber = afiliationNumber else {
            self.presenter?.getEccomerceInformationError()
            return
        }
        
        
        //LNKPG_Facade.shared.Initialize(environment: .development)
        LNKPG_Facade.shared.getEcommerceInformation(numeroAfiliacion: afiliationNumber, success: { [weak self] response in
            guard let self = self else { return }
            
            guard let response = response else {
                self.presenter?.getEccomerceInformationError()
                return
            }
            
            GSSAFundSharedVariables.shared.ecommerceResponse = response
            //self.presenter?.getEccomerceInformationSuccess()
            
            self.requestEcommerceSMTInformation()
            
        }, failure: {  [weak self] message in
            guard let self = self else { return }
            
            //print("Message Error: \(message ?? "")")
            self.presenter?.getEccomerceInformationError()
        })
    }
    
    
    
    func tryMailUpdate(body: UpdateMailBody, Response: @escaping (DigitalCardResponse?) -> ())
    {
        self.strPathEndpoint = "/superapp/enrolamiento/gestion-usuarios/v1/usuarios/correo"
        
        sendRequest(strUrl: strPathEndpoint, method: .PUT, objBody: body, environment: GLOBAL_ENVIROMENT) { (objRes: DigitalCardResponse?, error) in
            //debug//print(objRes ?? "NiL")
            
            if error.code == 0 {
                Response(objRes)
            } else {
                Response(nil)
               // debug//print(error)
            }
        }
    }
    
    private func requestEcommerceSMTInformation() {
        guard let email = GSSISessionInfo.sharedInstance.gsUser.email,
              let afiliationNumber = afiliationNumber else {
            self.presenter?.getEccomerceInformationError()
            return
        }
    
        LNKPG_Facade.shared.getEcommerceSMTInformation(numeroAfiliacion: afiliationNumber, email: email) { [weak self] (information) in

            guard let self = self else { return }
            
            
            guard let _ = information else {
                self.presenter?.getEccomerceInformationError()
                return
            }
            if let response = information {
                GSSAFundSharedVariables.shared.ecommerceSMTIResponse = response
            }

            let _ = GSSAFundSharedVariables.shared.getIdTransactionSuperApp()
            self.presenter?.getEccomerceInformationSuccess()
        } failure: { [weak self] (error) in
            guard let self = self else { return }
            self.presenter?.getEccomerceInformationError()
            //let _ = GSSAFundSharedVariables.shared.getIdTransactionSuperApp()
            //self.presenter?.getEccomerceInformationSuccess()
        }
    }
    
}
