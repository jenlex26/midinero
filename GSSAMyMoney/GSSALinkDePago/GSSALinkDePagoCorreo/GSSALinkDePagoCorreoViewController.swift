//
//  GSSALinkDePagoCorreoViewController.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 12/07/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAVisualTemplates
import GSSAVisualComponents
import GSSASessionInfo
import GSSAFunctionalUtilities
import GSSAFirebaseManager
import baz_ios_sdk_link_pago

public protocol GSSALinkDePagoCorreoViewControllerDelegate: AnyObject {
    func notifyCloseAction()
    func notifyEmail(email: String)
}

class GSSALinkDePagoCorreoViewController: GSSAMasterViewController, GSVCBottomAlertHandler{
    
    var bottomAlert: GSVCBottomAlert?
    var presenter: GSSALinkDePagoCorreoPresenterProtocol?
    weak var delegate: GSSALinkDePagoCorreoViewControllerDelegate?
    @IBOutlet weak var popButton: UIButton!
    @IBOutlet weak var txtMail  : GSVCTextField!
    @IBOutlet weak var lineView : UIView!
   
    override func viewDidLoad() {
        
        super.viewDidLoad()
        let img = UIImage(named: "close", in: Bundle.init(for: GSSALinkDePagoCorreoViewController.self), compatibleWith: nil)?.withRenderingMode(.alwaysTemplate)
        popButton.setImage(img, for: .normal)
        popButton.tintColor = .GSVCSecundary100
        setUpToolBar()
        txtMail.becomeFirstResponder()
        txtMail.addTarget(self, action: #selector(onStartEdit), for: .editingDidBegin)
        
    }
    
    @objc private func onStartEdit(){
        bottomAlert?.animateDismissal()
        bottomAlert = nil
    }
    
    override func viewWillAppear(_ animated: Bool) {
        createTag(eventName: .pageView, section: "mi_dinero", flow: "fondear_cuenta", screenName: "monto", origin: "")
    }
    
    override func viewDidDisappear(_ animated: Bool) {
       
    }
    
    func setUpToolBar(){
        let buttonTwo =  UIBarButtonItem(title: "Listo", style: .done, target: self, action: #selector(doneButtonClick))
        buttonTwo.tintColor = .white
        let numberToolbar = UIToolbar(frame:CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 50))
        numberToolbar.barStyle = .default
        numberToolbar.backgroundColor = UIColor(red: 19/255, green: 49/255, blue: 219/255, alpha: 1.0)
        numberToolbar.barTintColor = UIColor.GSVCPrincipal100
        numberToolbar.items = [
            UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil), buttonTwo]
        numberToolbar.sizeToFit()
        txtMail.inputAccessoryView = numberToolbar
    }
    
    private func validateEmail(email: String)->Bool{
        let evaluation = NSPredicate(format:"SELF MATCHES %@", "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}").evaluate(with: email)
        return evaluation
    }
    
    
    @IBAction func next(sender: GSVCButton){
        guard txtMail.text != "" else{
            self.presentBottomAlertFullData(status: .error, message: "Ingresa tu correo electrónico", attributedString: nil, canBeClosed: true, animated: true, showOptionalButton: false, optionalButtonText: nil)
            return
        }
        guard validateEmail(email: txtMail.text ?? "") == true else {
            self.presentBottomAlertFullData(status: .error, message: "El correo electrónico no es valido", attributedString: nil, canBeClosed: true, animated: true, showOptionalButton: false, optionalButtonText: nil)
            return
        }
        dismiss(animated: true, completion: {
            self.delegate?.notifyEmail(email: self.txtMail.text ?? "")
        })
    }
    @IBAction func popAction(_ sender: Any) {
        dismiss(animated: true, completion: {
            self.delegate?.notifyCloseAction()
        })
    }
    
    @objc func doneButtonClick(){
        self.view.endEditing(true)
    }
}

extension GSSALinkDePagoCorreoViewController: GSSALinkDePagoCorreoViewProtocol{
    
}
