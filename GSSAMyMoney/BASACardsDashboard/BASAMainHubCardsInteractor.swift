//
//  BASAMainHubCardsInteractor.swift
//  GSSAFront
//
//  Created Desarrollo on 17/06/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAServiceCoordinator
import GSSASecurityManager
import GSSASessionInfo
import GSSAFunctionalUtilities

open class BASAMainHubCardsInteractor: GSSAURLSessionTaskCoordinatorBridge, BASAMainHubCardsInteractorProtocol{
    
    weak var presenter: BASAMainHubCardsPresenterProtocol?
    
    func tryGetUserActivations(UserActivationsResponse: @escaping () -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/busquedas/cu"
        
        struct userLendsBody: Codable {}
        let body = userLendsBody.init()
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], environment: GLOBAL_ENVIROMENT) { (objRes: BalanceResponse?, error) in
            print(body)
            print(objRes ?? "null")
            
            if error.code == 0 {
                
             //   UserActivationsResponse(objRes)
            } else {
                //UserActivationsResponse(nil)
                debugPrint(error)
            }
        }
        
    }
    
    func TryGetDebitCardBalance(Account:[String:String], Balance: @escaping (BalanceResponse?) -> ()){
        let requestBody = TransationBalanceRequest(transaccion: TransationItem(folio: (GSSISessionInfo.sharedInstance.gsUser.SICU?.encryptAlnova() ?? "")))
        self.strPathEndpoint = "/superapp/dinero/captacion/cuentas/v1/busquedas"
        
//        self.urlPath = "https://apigateway.superappbaz.com/"
//        self.strPathEndpoint = "integracion/superapp/dinero/captacion/cuentas/v1/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: requestBody, environment: GLOBAL_ENVIROMENT) { (objRes: BalanceResponse?, error) in
           
            
            if error.code == 0 {
                if (objRes?.resultado.cliente?.cuentas?.first?.saldoDisponible) != nil{
                    Balance(objRes)
                }else{
                    Balance(objRes)
                }
            } else {
                Balance(nil)
                debugPrint(error)
            }
        }
    }
    
    func TryGetDebitCardMovements(Body: MovimientosBody, Movements: @escaping (DebitCardTransaction?) -> ()){
        self.strPathEndpoint = "/superapp/dinero/captacion/cuentas/v1/movimientos/busquedas"

//        self.urlPath = "https://apigateway.superappbaz.com/"
//        self.strPathEndpoint = "integracion/superapp/dinero/captacion/cuentas/v1/busquedas"

        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: GLOBAL_ENVIROMENT) { (objRes: DebitCardTransaction?, error) in
            
            if error.code == 0{
                Movements(objRes)
            } else if error.code == 400{
                Movements(DebitCardTransaction.init(mensaje: "", folio: "", resultado: DebitCardTransactionResult(numeroCuenta: "", producto: "", titularCuenta: "", fechaConsulta: "", horaConsulta: "", movimientos: [])))
            }else{
                Movements(nil)
                debugPrint(error)
            }
        }
        
        
    }
    
    func tryGetUserLends(Lends: @escaping (LendsResponse?) -> ()){
        self.strPathEndpoint = "integracion/superapp/pagos/creditos/agenda-pagos/v1/credimax/pagos-pendientes"
        
        struct userLendsBody: Codable {}
        let body = userLendsBody.init()
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: body, environment: GLOBAL_ENVIROMENT) { (objRes: GenericRawLendsResponse?, error) in
            print(body)
            debugPrint(objRes as Any)
            
            let response = objRes?.body
            
            if error.code == 0 {
                Lends(response)
            } else {
                Lends(nil)
                debugPrint(error)
            }
        }
    }
    
    func tryGetCreditCardData(Body: CreditCardBody, CreditCardData: @escaping (CreditCardResponse?) -> ()){
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/busquedas"
        
        let body = CreditCardBody.init(transaccion: CreditCardTransaccion.init(numeroCuenta: nil, numeroTarjeta: "4589090600000345".dynamicEncrypt(), numeroContrato: nil))
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: body, environment: GLOBAL_ENVIROMENT) { (objRes: GenericRawCreditCardResponse?, error) in
            print(Body)
            debugPrint(objRes as Any)
            let response = objRes?.body
            if error.code == 0 {
                CreditCardData(response)
            } else {
                CreditCardData(nil)
                debugPrint(error)
            }
        }
    }
    
    func tryGetCreditCardBalance(Body: CreditCardBalanceBody, CreditCardBalance: @escaping (CreditCardBalanceResponse?) -> ()){
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/saldos/busquedas"
        
        let body = CreditCardBalanceBody.init(transaccion: CreditCardBalanceTransaccion.init(numeroTarjeta: "4589090600000345".dynamicEncrypt()))
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: body, environment: GLOBAL_ENVIROMENT) { (objRes: GenericRawCreditCardBalanceResponse?, error) in
            debugPrint(objRes as Any)
            let response = objRes?.body
            
            if error.code == 0 {
                CreditCardBalance(response)
            } else {
                CreditCardBalance(nil)
                debugPrint(error)
            }
        }
    }
    
    func tryGetCreditCardMovements(Body: CreditCardMovementsBody, CreditCardMovements: @escaping (CreditCardMovementsResponse?) -> ()){
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/movimientos/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: GLOBAL_ENVIROMENT) { (objRes: GenericRawCreditCardMovementsResponse?, error) in
            debugPrint(objRes ?? "")
            let response = objRes?.body
            if error.code == 0 {
                CreditCardMovements(response)
            } else {
                CreditCardMovements(nil)
                debugPrint(error)
            }
        }
    }
    
    func TryGetDebitCardMovementsV2(Body: MovimientosBodyv2, Movements: @escaping (DebitCardTransactionV2?) -> ()) {
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/dinero/captacion/cuentas/v2/movimientos/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: GLOBAL_ENVIROMENT) { (objRes: DebitCardTransactionV2?, error) in
            
            if error.code == 0{
                Movements(objRes)
            } else if error.code == 400{
                Movements(DebitCardTransactionV2.init(mensaje: "", folio: "", resultado: DebitCardTransactionResultV2.init(movimientos:[])))
            }else{
                Movements(nil)
                debugPrint(error)
            }
        }
    }
}

    
