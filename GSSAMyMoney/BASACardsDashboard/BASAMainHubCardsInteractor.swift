//
//  BASAMainHubCardsInteractor.swift
//  GSSAFront
//
//  Created Desarrollo on 17/06/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAServiceCoordinator
import GSSASecurityManager
import GSSASessionInfo

open class BASAMainHubCardsInteractor: GSSAURLSessionTaskCoordinatorBridge, BASAMainHubCardsInteractorProtocol{
    
    weak var presenter: BASAMainHubCardsPresenterProtocol?
    
    func TryGetDebitCardBalance(Account:[String:String], Balance: @escaping (BalanceResponse?) -> ()){
        
    let requestBody = TransationBalanceRequest(transaccion: TransationItem(folio: (GSSISessionInfo.sharedInstance.gsUser.SICU?.encryptAlnova() ?? ""), numeroCuenta: (GSSISessionInfo.sharedInstance.gsUser.account?.number?.encryptAlnova() ?? "")))
    
    self.urlPath = "https://apigateway.superappbaz.com/"
    self.strPathEndpoint = "integracion/superapp/dinero/captacion/cuentas/v1/busquedas"
    
    sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: requestBody, environment: .develop) { (objRes: BalanceResponse?, error) in
        
        if error.code == 0 {
            if (objRes?.resultado.cliente?.cuentas?.first?.saldoDisponible) != nil{
                Balance(objRes)
            }else{
                Balance(objRes)
            }
        } else {
            Balance(nil)
            debugPrint(error)
        }
    }
}
    
    func TryGetDebitCardMovements(Body: MovimientosBody, Movements: @escaping (DebitCardTransaction?) -> ()){
        
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/dinero/captacion/cuentas/v1/movimientos/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: .develop) { (objRes: DebitCardTransaction?, error) in
            
            if error.code == 0 {
                if let mensaje = objRes?.mensaje {
                    print(mensaje)
                    Movements(objRes)
                }else{
                    Movements(nil)
                }
            } else {
                Movements(nil)
                debugPrint(error)
            }
        }
        
        
    }
    
    func tryGetUserLends(Lends: @escaping (LendsResponse?) -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/pagos/creditos/agenda-pagos/v1/credimax/pagos-pendientes"
        
        struct userLendsBody: Codable {}
        let body = userLendsBody.init()
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: body, environment: .develop) { (objRes: LendsResponse?, error) in
            debugPrint(objRes as Any)
            
            if error.code == 0 {
                Lends(objRes)
            } else {
                Lends(nil)
                debugPrint(error)
            }
        }
    }
    
    func tryGetCreditCardData(Body: CreditCardBody, CreditCardData: @escaping (CreditCardResponse?) -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: .develop) { (objRes: CreditCardResponse?, error) in
            debugPrint(objRes as Any)
            
            if error.code == 0 {
                CreditCardData(objRes)
            } else {
                CreditCardData(nil)
                debugPrint(error)
            }
        }
        
    }
    
    func tryGetCreditCardBalance(Body: CreditCardBalanceBody, CreditCardBalance: @escaping (CreditCardBalanceResponse?) -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/saldos/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: .develop) { (objRes: CreditCardBalanceResponse?, error) in
            debugPrint(objRes as Any)
            
            if error.code == 0 {
                CreditCardBalance(objRes)
            } else {
                CreditCardBalance(nil)
                debugPrint(error)
            }
        }
        
        
    }
    
    func tryGetCreditCardMovements(Body: CreditCardMovementsBody, CreditCardMovements: @escaping (CreditCardMovementsResponse?) -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "integracion/superapp/prestamos/tarjeta-credito/v1/tarjetas/movimientos/busquedas"
        
        sendRequest(strUrl: strPathEndpoint, method: .POST, arrHeaders: [], objBody: Body, environment: .develop) { (objRes: CreditCardMovementsResponse?, error) in
            debugPrint(objRes as Any)
            
            if error.code == 0 {
                CreditCardMovements(objRes)
            } else {
                CreditCardMovements(nil)
                debugPrint(error)
            }
        }
    }
    
    public static func refreshUserBalances() -> [String:String]{
        var data = ["":""]
//
//        TryGetDebitCardBalance(Account: [:], Balance: {Balance in
//            data.updateValue(Balance?.resultado.cliente?.cuentas?.first?.saldoDisponible ?? "", forKey: "debitBalance")
//            self.tryGetCreditCardBalance(Body: CreditCardBalanceBody.init(transaccion: CreditCardBalanceTransaccion.init(numeroTarjeta: GSSISessionInfo.sharedInstance.gsUser.encryptedCard?.alnovaDecrypt())), CreditCardBalance: { CreditCardBalance in
//                data.updateValue(CreditCardBalance?.resultado?.saldoDisponible ?? "", forKey: "creditBalance")
//            })
//        })
//
        return data
    }
}

