//
//  BASANewBeneficiaryViewController.swift
//  GSSAFront
//
//  Created Desarrollo on 14/06/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class BASANewBeneficiaryViewController: UIViewController, BASANewBeneficiaryViewProtocol {
	var presenter: BASANewBeneficiaryPresenterProtocol?
    var tableFields: Array<beneficiaryField> = []
    
    @IBOutlet weak var table: UITableView!

	override func viewDidLoad() {
        super.viewDidLoad()
        
        NotificationCenter.default.addObserver(self, selector: #selector(updateData(sender:)), name: NSNotification.Name(rawValue: "TextFieldDidEnd"), object: nil)
        tableFields.append(beneficiaryField(title: "Nombre", image: nil, placeHolder: nil, pickerData: nil))
        tableFields.append(beneficiaryField(title: "Apellido paterno", image: nil, placeHolder: nil, pickerData: nil))
        tableFields.append(beneficiaryField(title: "Apellido materno", image: nil, placeHolder: "Opcional", pickerData: nil))
        if #available(iOS 13.0, *) {
            tableFields.append(beneficiaryField(title: "Fecha de nacimiento", image: UIImage(systemName: "calendar"), placeHolder: "DD/MM/AAAA", pickerData: pickerTextField.init(pickerOptions: nil, datePicker: true, dateFormat: "dd/mm/yyyy")))
            tableFields.append(beneficiaryField(title: "Parentesco", image: UIImage(systemName: "chevron.down"), placeHolder: "Selecciona", pickerData: pickerTextField.init(pickerOptions: ["Tio","Padre","Madre","Primo","Amigo(a)"], datePicker: false, dateFormat: nil)))
        }
        tableFields.append(beneficiaryField(title: "Número telefónico", image: nil, placeHolder: nil, pickerData: nil))
        tableFields.append(beneficiaryField(title: "Correo electrónico", image: nil, placeHolder: nil, pickerData: nil))
        tableFields.append(beneficiaryField(title: "Porcentaje otorgado", image: nil, placeHolder: nil, pickerData: nil, size: .small, keyboardType: .numberPad))
        
        registerCells()
        table.alwaysBounceVertical = false
        table.delegate = self
        table.dataSource = self
        self.hideKeyboardWhenTappedAround()
    }
    
    func registerCells(){
        let bundle = Bundle(for: BASANewBeneficiaryViewController.self)
        table.register(UINib(nibName: "BASASwitchItemCell", bundle: bundle), forCellReuseIdentifier: "BASASwitchItemCell")
        table.register(UINib(nibName: "SectionCell", bundle: bundle), forCellReuseIdentifier: "SectionCell")
        table.register(UINib(nibName: "BASATextFieldCell", bundle: bundle), forCellReuseIdentifier: "BASATextFieldCell")
        table.register(UINib(nibName: "BASAInfoCardCell", bundle: bundle), forCellReuseIdentifier: "BASAInfoCardCell")
        table.register(UINib(nibName: "BASAButtonCell", bundle: bundle), forCellReuseIdentifier: "BASAButtonCell")
    }
    
    @objc func updateData(sender: Notification){
        if sender.object != nil{
            let object = sender.object as! [String:Int]
            if object.first!.value != -1{
                tableFields[object.first!.value].text = object.first!.key
                
            }
        }
    }
    
    @IBAction func close(_ sender: Any){
        self.navigationController?.popViewController(animated: true)
    }

}

extension BASANewBeneficiaryViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 4 + tableFields.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.row{
        case 0:
            let cell = table.dequeueReusableCell(withIdentifier: "SectionCell") as! SectionCell
            cell.lblTitle.styleType = 6
            cell.lblTitle.text = "Podrás agregar hasta cuatro beneficiarios."
            return cell
        case 1:
            let cell = table.dequeueReusableCell(withIdentifier: "BASASwitchItemCell") as! BASASwitchItemCell
            cell.lblSubTitle.isHidden = true
            cell.lblTitle.styleType = 6
            cell.lblTitle.text = "Utilizar mi dirección"
            cell.separatorView.isHidden = true
            return cell
        case 2 + tableFields.count:
            let cell = table.dequeueReusableCell(withIdentifier: "BASAInfoCardCell") as! BASAInfoCardCell
            cell.lblText.text = "La suma total de tus beneficiarios debe dar un total del 100%"
            return cell
        case 3 + tableFields.count:
            let cell = table.dequeueReusableCell(withIdentifier: "BASAButtonCell")
            return cell!
        default:
            let cell = table.dequeueReusableCell(withIdentifier: "BASATextFieldCell") as! BASATextFieldCell
            tableFields[indexPath.row - 2].index = indexPath.row - 2
            cell.configureCell(data: tableFields[indexPath.row - 2])
            return cell
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        switch indexPath.row{
        case 0:
            return 70.0
        case 1:
            return 56.0
        case  2 + tableFields.count:
            return 110.0
        case  3 + tableFields.count:
            return 119.0
        default:
            return 117.0
        }
    }
}

struct pickerTextField{
    var pickerOptions: [String]?
    var datePicker: Bool
    var dateFormat: String?
}

struct beneficiaryField{
    var title: String
    var image: UIImage?
    var placeHolder: String?
    var pickerData: pickerTextField?
    var size: cellSize?
    var keyboardType: UIKeyboardType?
    var text: String? = ""
    var index: Int?
}

enum cellSize{
    case small
    case normal
}
