//
//  GSSADocumentReaderViewController.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 06/09/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import WebKit
import GSSAVisualComponents
import PDFKit

class GSSADocumentReaderViewController: UIViewController, GSSADocumentReaderViewProtocol, WKNavigationDelegate, UIScrollViewDelegate {
    
    @IBOutlet weak var webView      : WKWebView!
    @IBOutlet weak var shareButton  : UIButton!
    
    var presenter: GSSADocumentReaderPresenterProtocol?
    var urlDocument: URL?
    var base64Document: String!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        activityObserved()
        setBackButtonForOlderDevices(tint: .purple)
        shareButton.setImage(UIImage.shareIcon(), for: .normal)
        self.webView.scrollView.delegate = self
        webView.navigationDelegate = self
        if base64Document != nil{
         saveBase64StringToPDF(base64Document)
        }
    }
    
    func scrollViewDidScroll(_ scrollView: UIScrollView) {  
        activityObserved()
    }
    
    func saveBase64StringToPDF(_ base64String: String) {
        guard
            var documentsURL = (FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)).last,
            let convertedData = Data(base64Encoded: base64String)
        else {
            return
        }
        documentsURL.appendPathComponent("EstadoDeCuenta.pdf")
        
        do {
            try convertedData.write(to: documentsURL)
        } catch {()}
        urlDocument = documentsURL
        displayPDF()
    }
    
    func displayPDF() {
        if urlDocument != nil{
            let pdfview = PDFView(frame: webView.scrollView.bounds)
            pdfview.autoresizingMask = [.flexibleWidth, .flexibleHeight]
            pdfview.autoScales = true
            self.webView.addSubview(pdfview)
            let doc = PDFDocument(url: urlDocument!)
            pdfview.document = doc
        }
    }
    
    @IBAction func share(_ sender: Any){
        if urlDocument != nil{
            GSVCLoader.show()
            let activityViewController = UIActivityViewController(activityItems: [urlDocument!], applicationActivities: nil)
            activityViewController.popoverPresentationController?.sourceView = self.view
            self.present(activityViewController, animated: true, completion: {
                GSVCLoader.hide()
            })
        }
    }
    
    @IBAction func close(_ sender: Any){
        activityObserved()
        self.navigationController?.popViewController(animated: true)
    }
}
