//
//  GSSACardNIPViewController.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 30/07/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAVisualComponents
import GSSASessionInfo

class GSSACardNIPViewController: UIViewController, GSSACardNIPViewProtocol, GSVCBottomAlertHandler {
    
    var bottomAlert: GSVCBottomAlert?
    var presenter: GSSACardNIPPresenterProtocol?
    
    @IBOutlet weak var txtNIP1: UITextField!
    @IBOutlet weak var txtNIP2: UITextField!
    @IBOutlet weak var txtNIP3: UITextField!
    @IBOutlet weak var txtNIP4: UITextField!
    
    var CVV           : String!
    var contractNumber: String! 
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationController?.setNavigationBarHidden(true, animated: false)
        NotificationCenter.default.addObserver(self, selector: #selector(retryRequest), name: NSNotification.Name(rawValue: "RetryRequest"), object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(closeView), name: NSNotification.Name(rawValue: "ExitFlow"), object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(handleCustomRequest(notification:)), name: NSNotification.Name(rawValue: "NIPCustomRequest"), object: nil)
        requestNIP()
    }
    
    @objc func handleCustomRequest(notification: Notification){
        DispatchQueue.main.async { [self] in
            let jsonData = notification.object as! Data
            let model = try! JSONDecoder().decode(RequestNIPResponse.self, from: jsonData)
            setNIP(NIP: model.resultado?.nip?.alnovaDecrypt() ?? "")
            GSVCLoader.hide()
        }
    }
    
    @objc func retryRequest(){
        requestNIP()
    }
    
    @objc func closeView(){
        let viewControllers: [UIViewController] = self.navigationController!.viewControllers as [UIViewController]
        for VC in viewControllers{
            if VC is BASACardConfigViewController{
                self.navigationController?.popToViewController(VC, animated: true)
            }
        }
    }
    
    func optionalAction() {  print("") }
    
    func requestNIP(){
        GSVCLoader.show()
        let body = RequestNIPBody.init(transaccion: RequestNIPTransaccion.init(primerTokenVerificacion: customToken.shared.firstVerification, tarjeta: RequestNIPCard.init(numero: customToken.shared.debitCardNumber.removeWhiteSpaces().encryptAlnova(), numeroContrato: contractNumber.encryptAlnova(), codigoSeguridad:  CVV)))
      
        
        presenter?.requestCardNIP(body: body, Response: { [self] Response in
            GSVCLoader.hide()
            
            if Response != nil{
                UserDefaults.standard.setValue(CVV, forKey: "DebitCardCVV")
                setNIP(NIP: Response?.resultado?.nip?.alnovaDecrypt() ?? "    ")
            }else{
                setNIP(NIP: "    ")
                UserDefaults.standard.removeObject(forKey: "DebitCardCVV")
                let view = self.showErrorViewController(message: "Intente más tarde")
                view.modalPresentationStyle = .fullScreen
                self.present(view, animated: true, completion: nil)
            }
        })
    }
    
    func setNIP(NIP: String){
        if NIP.count == 4{
            let characters = Array(NIP)
            txtNIP1.text = characters[0].toString()
            txtNIP2.text = characters[1].toString()
            txtNIP3.text = characters[2].toString()
            txtNIP4.text = characters[3].toString()
        }
    }
    
    @IBAction func close(_ sender: Any){
        let viewControllers: [UIViewController] = self.navigationController!.viewControllers as [UIViewController]
        for VC in viewControllers{
            if VC is BASACardConfigViewController{
                self.navigationController?.popToViewController(VC, animated: true)
            }
        }
    }
}
