//
//  GSSACardPaymentBtnSliderViewViewController.swift
//  GSSAMyMoney
//
//  Created cvillegasa on 07/09/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAVisualComponents
import GSSAVisualTemplates
class GSSACardPaymentBtnSliderViewViewController: UIViewController, GSSACardPaymentBtnSliderViewViewProtocol{
    
    
    

	var presenter: GSSACardPaymentBtnSliderViewPresenterProtocol?
    @IBOutlet weak var sliderView:UIView!
	override func viewDidLoad() {
        super.viewDidLoad()
        activityObserved()
        NotificationCenter.default.addObserver(self, selector: #selector(closeFlow), name: NSNotification.Name(rawValue: "closeBtnSlider"), object: nil)
        self.configureSliderBtn()
    }

    func configureSliderBtn(){
        let buttoncolor = UIColor(red: 0.44, green: 0.72, blue: 0.27, alpha: 1.00)
        let SB = GSVCSliderButton.init(delegate: self,strInstruction: "Desliza para pagar ", withSuccesText: false,succesBackgroundColor: .white,thumbnailColor: buttoncolor,thumbnailImage: UIImage(named: "arrastrar3")?.imageFlippedForRightToLeftLayoutDirection(), frame: CGRect(x: 0, y: 0, width: sliderView.frame.width, height: 70))
        sliderView.addSubview(SB)
    }
    
    @IBAction func tryClose(){
        self.closeFlow()
    }
    
//    func finishFlow(){
//        self.dismiss(animated: true) {
//            self.presenter?.closeParent()
//        }
//    }
    
    @objc func closeFlow(){
        self.dismiss(animated: true) {
            self.presenter?.closeParent()
        }
    }
    
}
extension GSSACardPaymentBtnSliderViewViewController : GSVTDigitalSignDelegate{
    func forgotDigitalSign(_ forgotSecurityCodeViewController: UIViewController?) {
        
    }
    
    func verification(_ success: Bool, withSecurityCode securityCode: String?, andUsingBiometric usingBiometric: Bool) {
        if success{
            activityObserved()
            NotificationCenter.default.post(Notification(name: Notification.Name(rawValue: "SlideComplete"), object: nil, userInfo: nil))
            self.closeFlow()
        }
    }
    
    func cancelDigitalSing(_ isUserBlocked: Bool) {
        activityObserved()
        self.closeFlow()
    }
}

extension GSSACardPaymentBtnSliderViewViewController : GSVTTicketOperationDelegate{
    func operationSuccessActionClosed() {
        activityObserved()
        self.closeFlow()
    }
    func operationSecundary() {
        activityObserved()
        self.closeFlow()
    }
}

extension GSSACardPaymentBtnSliderViewViewController : GSVCSliderButtonDelegate{
    func slideDidFinish(_ sender: GSVCSliderButton) {
        let digitalSign = GSVTDigitalSignViewController(delegate: self, bShouldWaitForNewToken: true)
        digitalSign.modalPresentationStyle = .overCurrentContext
        self.present(digitalSign, animated: true, completion: nil)
    }
}
