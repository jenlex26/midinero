//
//  GSSAPhysicalCardRequestAddressViewController.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 29/07/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAVisualTemplates
import GSSAVisualComponents

class GSSAPhysicalCardRequestAddressViewController: UIViewController, GSSAPhysicalCardRequestAddressViewProtocol, UITextFieldDelegate, GSVCBottomAlertHandler {
    
    var bottomAlert: GSVCBottomAlert?
    var presenter: GSSAPhysicalCardRequestAddressPresenterProtocol?
    
    @IBOutlet weak var actualLocationView: UIView!
    @IBOutlet weak var txtPostalCode     : GSVCTextField!
    @IBOutlet weak var btnPostalCode     : GSVCButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        actualLocationView.backgroundColor = UIColor.GSVCBase300()
        txtPostalCode.delegate = self
        txtPostalCode.tag = 1
    }
    
    func optionalAction() {}
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        let ACCEPTABLE_CHARACTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzñÑ0123456789 "
        let currentText = textField.text ?? ""
        guard let stringRange = Range(range, in: currentText) else { return false }
        let updatedText = currentText.replacingCharacters(in: stringRange, with: string)
        
        let cs = NSCharacterSet(charactersIn: ACCEPTABLE_CHARACTERS).inverted
        let filtered = string.components(separatedBy: cs).joined(separator: "")
        
        switch textField.tag{
        case 1:
            return updatedText.count <= 5 && (string == filtered)
        default:
            return true
        }
    }
    
    func showFields(){
        for item in self.view.subviews[1].subviews[0].subviews{
            if item.tag == 1{
                UIView.animate(withDuration: 0.5,
                               delay: 0.0,
                               usingSpringWithDamping: 0.9,
                               initialSpringVelocity: 1,
                               options: [],
                               animations: {
                                item.isHidden = false
                               })
            }
        }
    }
    
    @IBAction func postalCodeButtonClick(_ sender: Any){
        
        if txtPostalCode.text?.count == 5{
            GSVCLoader.show()
            presenter?.requestLocationInfo(CP: txtPostalCode.text ?? "", LocationInfo: { [self] LocationInfo in
                GSVCLoader.hide()
                if LocationInfo != nil{
                    showFields()
                    btnPostalCode.isHidden = true
                }else{
                    self.presentBottomAlertFullData(status: .error, message: "Verifique que el código postal sea válido", attributedString: nil, canBeClosed: true, animated: true, showOptionalButton: false, optionalButtonText: nil)
                }
            })
        }else{
            self.presentBottomAlertFullData(status: .error, message: "Ingrese un código postal válido", attributedString: nil, canBeClosed: true, animated: true, showOptionalButton: false, optionalButtonText: nil)
        }
    }
    
    @IBAction func close(_ sender: Any){
        self.navigationController?.popViewController(animated: true)
    }
}
