//
//  GSSARequestDebitCardInteractor.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 28/07/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAServiceCoordinator
import GSSASecurityManager
import GSSAFunctionalUtilities
import GSSASessionInfo
import Foundation
#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

class GSSARequestDebitCardInteractor: GSSAURLSessionTaskCoordinatorBridge, GSSARequestDebitCardInteractorProtocol {
    weak var presenter: GSSARequestDebitCardPresenterProtocol?
    
    func tryGetShippingCost(Response: @escaping (PhysicalCardShippingAmountResponse?) -> ()){
        self.urlPath = "https://apigateway.superappbaz.com/"
        self.strPathEndpoint = "desarrollo/superapp/dinero/captacion/gestion-tarjetas-fisicas/v1/tarjetas/busquedas/comision"
        sendRequest(strUrl: strPathEndpoint, method: .GET, arrHeaders: [], environment: .none) { (objRes: PhysicalCardShippingAmountResponse?, error) in
            if error.code == 0 {
                Response(objRes)
            } else {
                self.customRequest()
                Response(nil)
                debugPrint(error)
            }
        }
    }
    
    func customRequest(){
        let semaphore = DispatchSemaphore (value: 0)
        var request = URLRequest(url: URL(string: "https://apigateway.superappbaz.com/desarrollo/superapp/dinero/captacion/gestion-tarjetas-fisicas/v1/tarjetas/busquedas/comision")!,timeoutInterval: Double.infinity)
        request.addValue("3bad1290ac4600a569162efaa09117ea", forHTTPHeaderField: "x-sicu")
        request.addValue("123e4567-e89b-12d3-a456-426655440000", forHTTPHeaderField: "x-id-interaccion")
        request.addValue("Super movil", forHTTPHeaderField: "x-nombre-dispositivo")
        request.addValue("3bad1290ac4600a569162efaa09117ea", forHTTPHeaderField: "x-id-dispositivo")
        request.addValue("Android", forHTTPHeaderField: "x-sistema-dispositivo")
        request.addValue("6.0", forHTTPHeaderField: "x-version-dispositivo")
        request.addValue("2.1.1", forHTTPHeaderField: "x-version-aplicacion")
        request.addValue("P40", forHTTPHeaderField: "x-modelo-dispositivo")
        request.addValue("Huawei", forHTTPHeaderField: "x-fabricante-dispositivo")
        request.addValue("mt6735", forHTTPHeaderField: "x-serie-procesador")
        request.addValue("Telcel", forHTTPHeaderField: "x-operador-telefonia")
        request.addValue("19.49781290", forHTTPHeaderField: "x-latitud")
        request.addValue("-99.12698712", forHTTPHeaderField: "x-longitud")
        request.addValue("SRfVZrTYvdm7mzzZmcuiDViACkAx", forHTTPHeaderField: "x-token-usuario")
        request.addValue("99553877", forHTTPHeaderField: "x-id-lealtad")
        request.addValue("Bearer eyJraWQiOiJkczdRNlBTbE9ZNStuMnJjXC9PdjJqTGp5eWZRS2VJdmFjRXcwWHlNQm80cz0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIxOGg4dmFudnJoNHB1aTFscm50YzFuaWxqZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiVXN1YXJpb1wvZGVsZXRlIFVzdWFyaW9cL3JlYWQgVXN1YXJpb1wvdXBkYXRlIiwiYXV0aF90aW1lIjoxNjI4NjIwMTkxLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9FaEZuSU9JRzAiLCJleHAiOjE2Mjg2MjM3OTEsImlhdCI6MTYyODYyMDE5MSwidmVyc2lvbiI6MiwianRpIjoiNzY5ZjMxZjUtNWI0YS00NGY1LTk2NjktYTZhMDQyOGM2MWM2IiwiY2xpZW50X2lkIjoiMThoOHZhbnZyaDRwdWkxbHJudGMxbmlsamYifQ.HiUurok09pFe7Qj55dAC6HnxbuzBEvc8ClAlP5OImnKxoplF6VnVJmmNZsR1J6vetYMWLWH_xrlvx_7FT9T09OQd-kDWnI7SalB-AFMDfBYHw13pkECFzCZGhUeXVZ1T4amvIiCmL5PxcxawGHJnS_qD7r1R6CDWAQQa5NYZX18e9KnhGBjjjrglYVvjIbktKYrYH1ShRfYhzOEF81Aanyt4mkCtYmD-WeEf-KyjPrQmE3pRLh4JNQTI3IG-zx74g4IkuvRz-kWUMI9cVVomlYKKV-pkTzxJEQobNDDV2mknbE00pAfrtXkz7Ze3BG58MV12QjLBxPxmfYheG1zgoA", forHTTPHeaderField: "Authorization")
        request.addValue("XSRF-TOKEN=abd6f7dc-7383-4150-aabd-544647e7d0b3", forHTTPHeaderField: "Cookie")
        
        request.httpMethod = "GET"
        
        let task = URLSession.shared.dataTask(with: request) { data, response, error in
            guard let data = data else {
                print(String(describing: error))
                semaphore.signal()
                return
            }
            
            DispatchQueue.main.async {
                NotificationCenter.default.post(Notification(name: Notification.Name(rawValue: "PhysicalCardShippingAmountResponse"), object: data, userInfo: nil))
            }
            semaphore.signal()
        }
        
        task.resume()
        semaphore.wait()
    }
}
