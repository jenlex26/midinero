//
//  GSDigitalCardConfigViewController.swift
//  GSSAMyMoney
//
//  Created Desarrollo on 22/06/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GSSAVisualComponents
import GSSAVisualTemplates
import GSSASessionInfo

class GSDigitalCardConfigViewController: UIViewController, GSDigitalCardConfigViewProtocol, GSVCBottomAlertHandler {
   
    
    var presenter: GSDigitalCardConfigPresenterProtocol?
    
    @IBOutlet weak var containerView        : UIView!
    @IBOutlet weak var buttonsView          : UIView!
    @IBOutlet weak var messageView          : UIView!
    @IBOutlet weak var swtch                : UISwitch!
    @IBOutlet weak var lblBuyLimit          : GSVCLabel!
    @IBOutlet weak var lblDigitalCardStatus : GSVCLabel!
    @IBOutlet weak var lblMessage           : GSVCLabel!
    
    var cardStatus: Bool? = true
    var bottomAlert: GSVCBottomAlert?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        swtch.addTarget(self, action: #selector(switchChanged(sender:)), for: .valueChanged)
        buttonsView.layer.borderWidth = 0.5
        containerView.backgroundColor = .GSVCBase200
        buttonsView.layer.borderWidth = 0
        containerView.backgroundColor = .GSVCBase200
        cardStatus = UserDefaults.standard.value(forKey: "DigitalCardStatus") as? Bool
        swtch.isOn = (cardStatus ?? false)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        tagDebitDigitalCardConfigViewDidAppear()
    }
    
    func optionalAction() {
        print("Ok")
    }
    
    func requestCardStatusChange(){
        GSVCLoader.show()
        presenter?.shutdownCardRequest(body: CardStateBody.init(transaccion: CardStateTransaccion.init(primerTokenVerificacion: GSSISessionInfo.sharedInstance.gsAccessToken, numeroTarjeta: UserDefaults.standard.value(forKey: "DigitalCardNumber") as? String, estatus: !cardStatus!)), DataCard: { [self] DataCard in
            GSVCLoader.hide()
            if DataCard != nil{
                if cardStatus == true{
                    let alert = UIAlertController(title: "Apagaste tu tarjeta", message: "Las nuevas compras no serán procesadas. Puedes volver a encenderla cuando lo necesites. ", preferredStyle: .alert)
                    alert.addAction(UIAlertAction(title: "Aceptar", style: .cancel, handler: nil))
                    self.present(alert, animated: true, completion: {
                        UserDefaults.standard.setValue(true, forKey: "DigitalCardStatus")
                    })
                    
                }else{
                    let alert = UIAlertController(title: "Encendiste tu tarjeta", message: "Las nuevas compras serán procesadas. Puedes volver a apagarla cuando lo necesites. ", preferredStyle: .alert)
                    alert.addAction(UIAlertAction(title: "Aceptar", style: .cancel, handler: nil))
                    self.present(alert, animated: true, completion: {
                        UserDefaults.standard.setValue(false, forKey: "DigitalCardStatus")
                    })
                }
              
            }else{
                swtch.isOn = !swtch.isOn
                presentBottomAlertFullData(status: .error, message: "En este momento no podemos cambiar el estado de tu tarjeta, intenta más tarde", attributedString: nil, canBeClosed: true, animated: true, showOptionalButton: false, optionalButtonText: nil)
            }
        })
    }
    
    func cancelDigitalSing(_ isUserBlocked: Bool) {
        swtch.isOn = !swtch.isOn
    }
    
    @objc func switchChanged(sender: UISwitch){
        cardStatus = sender.isOn
        tagDebitDigitalCardSwitchClick(isOn: sender.isOn)
        requestCardStatusChange()
    }
    
    @IBAction func close(_ sender: Any){
        self.navigationController?.popViewController(animated: true)
    }
}
